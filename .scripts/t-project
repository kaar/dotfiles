#!/usr/bin/env bash
set -o errexit
set -o nounset
set -o pipefail

ROOT_DIR="$HOME/repos/kaar"

usage() {
  cat <<EOF
Usage: $(basename "$0") [options] [project-name]

Manage project-specific tmux sessions in ~/repos/kaar/
Each project is a git repository with its own dedicated tmux session.

Commands:
  $(basename "$0")                 Interactive project selection using fzf
  $(basename "$0") <project-name>  Create or switch to named project
  $(basename "$0") ls              List all projects
  $(basename "$0") --help          Show this help message

Behavior:
  - If project exists: Creates/switches to its tmux session
  - If project doesn't exist: Initializes new git repo with README.md
                              Optionally creates private GitHub repository
  - When inside tmux: Switches to the project session
  - When outside tmux: Attaches to the project session

Examples:
  $(basename "$0")              # Select project interactively
  $(basename "$0") my-app       # Switch to or create 'my-app' project
  $(basename "$0") ls           # List all projects in ~/repos/kaar
EOF
}

project_exists() {
  local project_name=$1
  local project_dir=~/repos/kaar/"$project_name"
  [[ -d "$project_dir" ]]
}

create_project() {
  # TODO: Replace any special characters with spaces.
  # Examples:
  #   project-name -> Project Name
  #   project_name -> Project Name
  #   project.name -> Project Name
  #   projectName -> Project Name
  #   projectName123 -> Project Name 123
  #   project-name_v2 -> Project Name V2
  #   project-name_v2.1 -> Project Name V2.1
  #
  local project_name=$1
  local project_dir=~/repos/kaar/"$project_name"
  if [ -d "$project_dir" ]; then
    echo "Project directory $project_dir already exists."
    exit 1
  fi

  echo "Creating project directory $project_dir"
  mkdir -p "$project_dir"
  cd "$project_dir" || exit 1
  git init
  echo "# $project_name" >README.md
  git add README.md
  git commit -m "Initial commit"
  # Ask if to create a GitHub repository.
  read -r -p "Create a private GitHub repository for $project_name? (y/n) " response
  if [[ ! "$response" =~ ^[Yy]$ ]]; then
    return
  fi
  echo "Creating GitHub repository kaar/$project_name"
  gh repo create kaar/"$project_name" --private --source=. --remote=origin --push
  echo "Project $project_name created at $project_dir and pushed to GitHub."
}

list_projects() {
  find "$ROOT_DIR" -maxdepth 1 -mindepth 1 -type d -exec basename {} \;
}

case "${1:-}" in
-h | --help)
  usage
  exit 0
  ;;
ls)
  list_projects
  exit 0
  ;;
esac

# If no project name is given, select from existing projects using fzf.
if [[ -z "${1:-}" ]]; then
  project_name=$(list_projects | fzf --reverse \
    --header "Select project" \
    --preview "ls -la $ROOT_DIR/{}")

  if [[ -z "$project_name" ]]; then
    echo "No project selected."
    exit 1
  fi
else
  project_name="${1}"
fi
project_dir="$ROOT_DIR/$project_name"

if ! project_exists "$project_name"; then
  create_project "$project_name"
fi

echo "Switching to project directory $project_dir"

# Check if tmux session exists, create it if it doesn't
session_name="$project_name"
if ! tmux has-session -t "$session_name" 2>/dev/null; then
  tmux new-session -ds "$session_name" -c "$project_dir"
fi

# Attach or switch tmux session
if [ -z "${TMUX-}" ]; then
  tmux attach-session -t "$session_name"
else
  tmux switch-client -t "$session_name"
fi
